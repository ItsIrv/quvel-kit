# HMR needs to support SSL all the way through from browser -> traefik -> vite dev server
http:
  routers:
    web:
      rule: 'Host(`quvel.${LOCAL_IP}.nip.io`) || Host(`quvel-two.${LOCAL_IP}.nip.io`)${TENANT_DOMAINS}'
      entryPoints: websecure
      service: web
      tls: {}

    web-ws:
      rule: '(Host(`quvel.${LOCAL_IP}.nip.io`) || Host(`quvel-two.${LOCAL_IP}.nip.io`)${TENANT_DOMAINS}) && PathPrefix(`/hmr`)'
      entryPoints: websecure
      service: web-ws
      tls: {}
      middlewares:
        - websocket-headers

    capacitor:
      rule: 'Host(`cap-tenant.quvel.${LOCAL_IP}.nip.io`)${CAP_TENANT_DOMAINS}'
      entryPoints: websecure
      service: capacitor
      tls: {}

  services:
    web:
      loadBalancer:
        servers:
          - url: '${FRONTEND_TARGET}'
        serversTransport: 'insecureTransport' # Supports self-signed certificates

    web-ws:
      loadBalancer:
        servers:
          - url: '${FRONTEND_WS_TARGET}'
        serversTransport: 'insecureTransport' # Supports self-signed certificates

    capacitor:
      loadBalancer:
        servers:
          - url: '${CAPACITOR_TARGET}'
        serversTransport: 'insecureTransport' # Supports self-signed certificates

  middlewares:
    websocket-headers:
      headers:
        customRequestHeaders:
          Connection: 'Upgrade'
          Upgrade: 'websocket'
        customResponseHeaders:
          Sec-WebSocket-Accept: '{Sec-WebSocket-Key}'

  serversTransports:
    insecureTransport:
      insecureSkipVerify: true