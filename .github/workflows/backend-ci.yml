name: Backend CI

on:
  push:
    branches: [main, develop]
    paths: ['backend/**', '.github/**']
  pull_request:
    branches: [main, develop]
    paths: ['backend/**', '.github/**']

jobs:
  backend-tests:
    name: Backend CI Pipeline
    runs-on: ubuntu-latest
    environment: testing
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, sqlite3
          coverage: xdebug

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: backend/vendor
          key: vendor-${{ runner.os }}-${{ hashFiles('backend/composer.lock') }}
          restore-keys: vendor-${{ runner.os }}-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-interaction --no-scripts

      - name: Set Up Environment
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=sqlite" >> .env
          touch database/database.sqlite

      - name: Run Security & Dependency Audit (enforced)
        run: composer audit

      - name: Run Static Analysis (PHPStan)
        continue-on-error: true
        run: vendor/bin/phpstan analyse --configuration phpstan.neon

      - name: Run Code Style Check
        continue-on-error: true
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Run Tests with Coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --coverage-clover=coverage.xml --testdox

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./backend/coverage.xml
          flags: backend
          name: backend
          fail_ci_if_error: true
