name: Backend CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'

jobs:
  backend-tests:
    name: Backend CI Pipeline
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, sqlite3
          coverage: xdebug

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: backend/vendor
          key: vendor-${{ runner.os }}-${{ hashFiles('backend/composer.lock') }}
          restore-keys: vendor-${{ runner.os }}-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --no-suggest --no-scripts
        working-directory: backend

      - name: Set Up Environment
        run: |
          cp .env.example .env
          php artisan key:generate
          echo "DB_CONNECTION=sqlite" >> .env
          touch database/database.sqlite
        working-directory: backend

      - name: Run Security & Dependency Audit
        continue-on-error: true
        run: composer audit || true
        working-directory: backend

      - name: Run PHPStan Static Analysis
        continue-on-error: true
        run: vendor/bin/phpstan analyse --configuration phpstan.neon
        working-directory: backend

      - name: Run Code Style Check
        continue-on-error: true
        run: vendor/bin/php-cs-fixer fix --dry-run --diff
        working-directory: backend

      - name: Run Tests with Coverage
        continue-on-error: true
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit -p
        working-directory: backend
