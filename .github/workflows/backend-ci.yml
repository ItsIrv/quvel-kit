name: Backend CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'

jobs:
  backend-tests:
    name: Backend CI Pipeline
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_mysql
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --no-progress --no-suggest --dev
        working-directory: backend

      - name: Set Up Environment
        run: cp .env.example .env && php artisan key:generate
        working-directory: backend

      - name: Run Security & Dependency Audit
        continue-on-error: true
        run: composer audit || true
        working-directory: backend

      - name: Run PHPStan Static Analysis
        continue-on-error: true
        run: vendor/bin/phpstan analyse --memory-limit=512M
        working-directory: backend

      - name: Run Code Style Check
        continue-on-error: true
        run: vendor/bin/php-cs-fixer fix --dry-run --diff
        working-directory: backend

      - name: Run Tests with Coverage
        continue-on-error: true
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing_db
          DB_USERNAME: root
          DB_PASSWORD: root
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml
        working-directory: backend

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage.xml
          compression-level: 6
